% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DEP_protein.R, R/DEP_rna.R
\name{add_rejections}
\alias{add_rejections}
\alias{add_rejections,SummarizedExperiment-method}
\alias{add_rejections,DEGdata-method}
\title{Mark significant proteins}
\usage{
\S4method{add_rejections}{SummarizedExperiment}(diff, alpha, lfc, thresholdmethod, curvature, x0_fold)

\S4method{add_rejections}{DEGdata}(diff, alpha, lfc, thresholdmethod, curvature, x0_fold)
}
\arguments{
\item{alpha}{Numeric(1),
Sets the threshold for the adjusted P value.}

\item{lfc}{Numeric(1),
Sets the threshold for the log2 fold change.}

\item{thresholdmethod}{Character(1),
The thresholdmethod to decide significant.should be one of "intersect" ,"curve".
If thresholdmethod = "curve", cutoff lines is the curves with function y = c/(x-x0).
c is the curvature, and x0 is the minimum fold change which relatived to the standard deviations of L2FC distribution}

\item{curvature}{Numeric(1),
Sets the curvature for the curve cutoff lines}

\item{x0_fold}{Numeric(1),
decide the x0 ratio to the standard deviations of L2FC. The x0 usually is set to 1(medium confidence) or 2(high confidence) standard deviations.}
}
\value{
A SummarizedExperiment object
annotated with logical columns indicating significant proteins.
}
\description{
\code{add_rejections} marks significant proteins based on defined cutoffs.
}
\examples{
\dontrun{
# For proteomics data -----
data(Silicosis_pg)
data <- Silicosis_pg
data_unique <- make_unique(data, "Gene.names", "Protein.IDs", delim = ";")

# Make SummarizedExperiment
ecols <- grep("LFQ.", colnames(data_unique))
se <- make_se_parse(data_unique, ecols, mode = "delim", sep = "_")

filt <- filter_se(se, thr = 0, fraction = 0.3, filter_formula = ~ Reverse != "+" & Potential.contaminant!="+")
norm <- normalize_vsn(filt)
imputed <- impute(norm, fun = "MinDet", q = 0.01)

# Test for differentially expressed proteins
diff <- test_diff(imputed, "control", "PBS")
dep <- add_rejections(diff, alpha = 0.05, lfc = 1)
# the curve method
dep <- add_rejections(diff, thresholdmethod = "curve")

# For peptide workflow -----
## Load example peptide data
data(Silicosis_peptide)
ecols <- grep("Intensity.", colnames(Silicosis_peptide), value = T)

## Construct QFeatures object
pe_peptides <- make_pe_parse(Silicosis_peptide, columns = ecols, remove_prefix = T, log2transform = T,mode = "delim")

## Filter
pe = filter_pe(pe_peptides,
thr = 1,
fraction = 0.3,
filter_formula = ~ Reverse != '+' & Potential.contaminant !="+"
)

## Impute & Normalize
pe <- impute_pe(pe, fun = "QRILC", name = "peptideImp")
pe <- normalize_pe(pe,method = "quantiles.robust", i = "peptideImp")

## Aggregate peptides
prot <- aggregate_pe(pe, fcol = "Proteins", i = "peptideNorm")
class(prot)

## Construct a SE object
SE_pep <- pe2se(prot)

## Test for differentially expressed proteins
diff_pep <- DEP2::test_diff(SE_pep,type = "control", control = "PBS", fdr.type = "Strimmer's qvalue(t)")
dep_pep <- add_rejections(diff_pep)
}

}
